/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../../../../../@chainlink/contracts-ccip/src/v0.8/ccip/test/mocks/MockRouter.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ReceiverError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    name: "MsgExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getOnRamp",
    outputs: [
      {
        internalType: "address",
        name: "onRampAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOffRamp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116b8806100206000396000f3fe6080604052600436106100965760003560e01c8063a48a905811610069578063d6be695a1161004e578063d6be695a146101a0578063ee18e0d3146101d0578063fbca3b74146101f957600080fd5b8063a48a905814610143578063a8d87a3b1461016457600080fd5b806320487ded1461009b5780633cf97983146100ce57806383826b2b146100fd57806396f4e9f914610130575b600080fd5b3480156100a757600080fd5b506100bb6100b6366004610e4b565b610234565b6040519081526020015b60405180910390f35b3480156100da57600080fd5b506100ee6100e9366004610f60565b61023d565b6040516100c593929190611021565b34801561010957600080fd5b5061012061011836600461104c565b600192915050565b60405190151581526020016100c5565b6100bb61013e36600461107f565b610267565b34801561014f57600080fd5b5061012061015e3660046110cd565b50600190565b34801561017057600080fd5b5061018861017f3660046110cd565b5063499602d290565b6040516001600160a01b0390911681526020016100c5565b3480156101ac57600080fd5b506101b762030d4081565b60405167ffffffffffffffff90911681526020016100c5565b3480156101dc57600080fd5b506101e661138881565b60405161ffff90911681526020016100c5565b34801561020557600080fd5b506102276102143660046110cd565b5060408051600081526020810190915290565b6040516100c591906110e8565b60005b92915050565b600060608161025661024e88611135565b87878761052c565b9250925092505b9450945094915050565b600061027382806111e2565b90506020146102c35761028682806111e2565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016102ba929190611259565b60405180910390fd5b60006102cf83806111e2565b8101906102dc919061126d565b90506001600160a01b038111806102f35750600a81105b156103025761028683806111e2565b80600061031a61031560808701876111e2565b6106a3565b600001519050600085604051602001610333919061131d565b60408051808303601f19018152828252805160209182012060a08401835280845267de41ba4fc9d91ad98285015282513381840152835180820384018152908401845292840192909252909250600091906060820190610395908a018a6111e2565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016103dc60408a018a61141d565b808060200260200160405190810160405280939291908181526020016000905b828210156104285761041960408302860136819003810190611467565b815260200190600101906103fc565b5050505050815250905060005b610442604089018961141d565b90508110156104ce576104be338661045d60408c018c61141d565b8581811061046d5761046d611483565b905060400201602001358b8060400190610487919061141d565b8681811061049757610497611483565b6104ad9260206040909202019081019150611499565b6001600160a01b031692919061075f565b6104c7816114b4565b9050610435565b506000806104e083611388878961052c565b50915091508161051e57806040517f0a8d6e8c0000000000000000000000000000000000000000000000000000000081526004016102ba91906114db565b509198975050505050505050565b60006060816001600160a01b0384163b158061057857506105766001600160a01b0385167f85572ffb000000000000000000000000000000000000000000000000000000006107d8565b155b15610598575050604080516020810190915260008082526001925061025d565b60006385572ffb60e01b886040516024016105b391906114ee565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506105f58186888a60846107f4565b60405192965090945092507fa8b0355886b5b7a28bb97e4f0a24feb172618407402721c4012d8b7c6433102f9061063190869086908690611021565b60405180910390a187516020808a01518351848301206040805194855267ffffffffffffffff90921692840192909252339083015260608201527f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b69060800160405180910390a1509450945094915050565b60408051602081019091526000815260008290036106d25750604080516020810190915262030d408152610237565b7f97a657c9000000000000000000000000000000000000000000000000000000006106fd83856115a8565b6001600160e01b0319161461073e576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074b82600481866115d8565b8101906107589190611602565b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03167f23b872dd000000000000000000000000000000000000000000000000000000001790526107d290859061091a565b50505050565b60006107e383610a04565b801561075857506107588383610a37565b6000606060008361ffff1667ffffffffffffffff81111561081757610817610c74565b6040519080825280601f01601f191660200182016040528015610841576020820181803683370190505b509150863b610874577f0c3b563c0000000000000000000000000000000000000000000000000000000060005260046000fd5b5a858110156108a7577fafa32a2c0000000000000000000000000000000000000000000000000000000060005260046000fd5b85900360408104810387106108e0577f37c3be290000000000000000000000000000000000000000000000000000000060005260046000fd5b505a6000808a5160208c0160008c8cf193505a900390503d848111156109035750835b808352806000602085013e50955095509592505050565b600061096f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ac09092919063ffffffff16565b8051909150156109ff578080602001905181019061098d9190611644565b6109ff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102ba565b505050565b6000610a17826301ffc9a760e01b610a37565b80156102375750610a30826001600160e01b0319610a37565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610aa9575060208210155b8015610ab55750600081115b979650505050505050565b6060610acf8484600085610ad7565b949350505050565b606082471015610b4f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102ba565b600080866001600160a01b03168587604051610b6b9190611666565b60006040518083038185875af1925050503d8060008114610ba8576040519150601f19603f3d011682016040523d82523d6000602084013e610bad565b606091505b5091509150610ab58783838760608315610c28578251600003610c21576001600160a01b0385163b610c215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ba565b5081610acf565b610acf8383815115610c3d5781518083602001fd5b8060405162461bcd60e51b81526004016102ba91906114db565b803567ffffffffffffffff81168114610c6f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610cad57610cad610c74565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610c74565b604052919050565b600082601f830112610cf557600080fd5b813567ffffffffffffffff811115610d0f57610d0f610c74565b610d22601f8201601f1916602001610cb3565b818152846020838601011115610d3757600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114610c6f57600080fd5b600060408284031215610d7d57600080fd5b6040516040810181811067ffffffffffffffff82111715610da057610da0610c74565b604052905080610daf83610d54565b8152602083013560208201525092915050565b600082601f830112610dd357600080fd5b8135602067ffffffffffffffff821115610def57610def610c74565b610dfd818360051b01610cb3565b82815260069290921b84018101918181019086841115610e1c57600080fd5b8286015b84811015610e4057610e328882610d6b565b835291830191604001610e20565b509695505050505050565b60008060408385031215610e5e57600080fd5b610e6783610c57565b9150602083013567ffffffffffffffff80821115610e8457600080fd5b9084019060a08287031215610e9857600080fd5b610ea0610c8a565b823582811115610eaf57600080fd5b610ebb88828601610ce4565b825250602083013582811115610ed057600080fd5b610edc88828601610ce4565b602083015250604083013582811115610ef457600080fd5b610f0088828601610dc2565b604083015250610f1260608401610d54565b6060820152608083013582811115610f2957600080fd5b610f3588828601610ce4565b6080830152508093505050509250929050565b600060a08284031215610f5a57600080fd5b50919050565b60008060008060808587031215610f7657600080fd5b843567ffffffffffffffff811115610f8d57600080fd5b610f9987828801610f48565b945050602085013561ffff81168114610fb157600080fd5b925060408501359150610fc660608601610d54565b905092959194509250565b60005b83811015610fec578181015183820152602001610fd4565b50506000910152565b6000815180845261100d816020860160208601610fd1565b601f01601f19169290920160200192915050565b831515815260606020820152600061103c6060830185610ff5565b9050826040830152949350505050565b6000806040838503121561105f57600080fd5b61106883610c57565b915061107660208401610d54565b90509250929050565b6000806040838503121561109257600080fd5b61109b83610c57565b9150602083013567ffffffffffffffff8111156110b757600080fd5b6110c385828601610f48565b9150509250929050565b6000602082840312156110df57600080fd5b61075882610c57565b6020808252825182820181905260009190848201906040850190845b818110156111295783516001600160a01b031683529284019291840191600101611104565b50909695505050505050565b600060a0823603121561114757600080fd5b61114f610c8a565b8235815261115f60208401610c57565b6020820152604083013567ffffffffffffffff8082111561117f57600080fd5b61118b36838701610ce4565b604084015260608501359150808211156111a457600080fd5b6111b036838701610ce4565b606084015260808501359150808211156111c957600080fd5b506111d636828601610dc2565b60808301525092915050565b6000808335601e198436030181126111f957600080fd5b83018035915067ffffffffffffffff82111561121457600080fd5b60200191503681900382131561122957600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610acf602083018486611230565b60006020828403121561127f57600080fd5b5035919050565b6000808335601e1984360301811261129d57600080fd5b830160208101925035905067ffffffffffffffff8111156112bd57600080fd5b80360382131561122957600080fd5b8183526000602080850194508260005b85811015611312576001600160a01b036112f583610d54565b1687528183013583880152604096870196909101906001016112dc565b509495945050505050565b60208152600061132d8384611286565b60a0602085015261134260c085018284611230565b9150506113526020850185611286565b601f198086850301604087015261136a848385611230565b935060408701359250601e1987360301831261138557600080fd5b60209287019283019235915067ffffffffffffffff8211156113a657600080fd5b8160061b36038313156113b857600080fd5b808685030160608701526113cd8483856112cc565b93506113db60608801610d54565b6001600160a01b038116608088015292506113f96080880188611286565b93509150808685030160a087015250611413838383611230565b9695505050505050565b6000808335601e1984360301811261143457600080fd5b83018035915067ffffffffffffffff82111561144f57600080fd5b6020019150600681901b360382131561122957600080fd5b60006040828403121561147957600080fd5b6107588383610d6b565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156114ab57600080fd5b61075882610d54565b6000600182016114d457634e487b7160e01b600052601160045260246000fd5b5060010190565b6020815260006107586020830184610ff5565b6000602080835283518184015280840151604067ffffffffffffffff82168186015280860151915060a0606086015261152a60c0860183610ff5565b91506060860151601f19808785030160808801526115488483610ff5565b608089015188820390920160a089015281518082529186019450600092508501905b8083101561159c57845180516001600160a01b031683528601518683015293850193600192909201919083019061156a565b50979650505050505050565b6001600160e01b031981358181169160048510156115d05780818660040360031b1b83161692505b505092915050565b600080858511156115e857600080fd5b838611156115f557600080fd5b5050820193919092039150565b60006020828403121561161457600080fd5b6040516020810181811067ffffffffffffffff8211171561163757611637610c74565b6040529135825250919050565b60006020828403121561165657600080fd5b8151801515811461075857600080fd5b60008251611678818460208701610fd1565b919091019291505056fea2646970667358221220ee0b05496d3ab3acb216137af420e5597da8a8b45382c84fe8dcbfa20691d72864736f6c63430008130033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCCIPRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCCIPRouter__factory {
    return super.connect(runner) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCCIPRouter {
    return new Contract(address, _abi, runner) as unknown as MockCCIPRouter;
  }
}
